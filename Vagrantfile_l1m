# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.box = "minimal/xenial64"
  config.vm.box = "ubuntu/trusty32" 
  config.vm.boot_timeout = 10000

  #config.ssh.private_key_path = "C:/Users/admin/.vagrant.d/insecure_private_key"
  # config.ssh.password = 123456

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
    config.vm.network "forwarded_port", guest: 22, host: 4566
   # config.vm.network "forwarded_port", guest: 80, host: 44444

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
    config.vm.network "private_network", ip: "192.168.33.11"
    
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
   config.vm.synced_folder "../ubuntu_l1m", "/vagrant"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
     vb.customize ['modifyvm', :id, '--nictype1', 'virtio']
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1024"
    end
    
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL
    echo -e "\n--- Update Packge ---\n"
    apt-get update
	echo -e "\n--- Install MySQL specific packages and settings ---\n"
	debconf-set-selections <<< "mysql-server mysql-server/root_password password vagrant"
	debconf-set-selections <<< "mysql-server mysql-server/root_password_again password vagrant"
	apt-get install -y mysql-server-5.6 >> /vagrant/vm_build.log 2>&1
	#curl -L https://github.com/asheptc/upgraded-potato/tarball/master/wp-for-testing.tar.gz > /vagrant/wp-for-testing.tar.gz >> /vagrant/vm_build.log 2>&1
	cd /vagrant/
	curl -L https://github.com/asheptc/upgraded-potato/tarball/master | tar xz 
	mv /vagrant/asheptc-upgraded-potato-*/wp-for-testing.tar.gz /vagrant
	rm -rf /vagrant/asheptc-upgraded-potato-*
	tar -xzvf wp-for-testing.tar.gz wordpress3.sql
	 
	echo -e "\n--- Setting up our MySQL user and db ---\n"
    mysql -uroot -pvagrant -e "CREATE DATABASE wordpress3" >> /vagrant/vm_build.log 2>&1
    mysql -uroot -pvagrant -e "grant all privileges on wordpress3.* to 'root'@'%' identified by 'vagrant'" > /vagrant/vm_build.log 2>&1
	mysql -uroot -pvagrant -e "FLUSH PRIVILEGES"
	  
	mysql -uroot -pvagrant wordpress3 < /vagrant/wordpress3.sql
	sed -i 's/127.0.0.1/192.168.33.11/' /etc/mysql/my.cnf
	service mysql  restart
    SHELL
end
